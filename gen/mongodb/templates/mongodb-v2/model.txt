package {{ .Collection.GetPackageName }}

{{range $pkg := .Collection.GetPackageImports false}}
import "{{$pkg}}"
{{- end}}

const(
{{- range $a := .Collection.Schema.AllAttributes}}
{{- range $i, $p := $a.Paths}}
{{ formatIdentifier $p "_" "upperCase" "index" "indexIjk"}} = "{{ formatIdentifier (index $a.BsonPaths $i) "." "none" "index" "indexSprintf" }}"
{{- end }}
{{- if or (eq $a.Typ "array") (eq $a.Typ "map") -}}
{{- range $i, $p := $a.Item.Paths}}
{{ formatIdentifier $p "_" "upperCase" "index" "indexIjk"}} = "{{ formatIdentifier (index $a.Item.BsonPaths $i) "." "none" "index" "indexSprintf" }}"
{{- end }}
{{- end }}
{{- end }}
)

type {{.Collection.Schema.Properties.StructName}} struct {
{{- range $a := .Collection.DirectAttributes}}
{{ $a.GetGoAttributeName }} {{ $a.GetGoAttributeType }}  {{$a.GetGoAttributeTag}}
{{- end}}
}

func (s {{.Collection.Schema.Properties.StructName}}) IsZero() bool {
/*
{{- range $a := .Collection.DirectAttributes}}
if {{ $a.GetGoAttributeIsZeroCondition }} {
    return false
}
{{- end}}
    return true
*/

    return {{- range $i, $a := .Collection.DirectAttributes}} {{ if $i }} && {{- end}} {{ $a.GetGoAttributeIsZeroCondition }} {{- end}}
}

{{range $s := .Collection.GetStructAttributes}}
type {{$s.GetDefinition.StructName}} struct {
{{- range $a := $s.Attributes}}
{{ $a.GetGoAttributeName }} {{ $a.GetGoAttributeType }}  {{$a.GetGoAttributeTag}}
{{- end}}
}

func (s {{$s.GetDefinition.StructName}}) IsZero() bool {
/*
{{- range $a := $s.Attributes}}
if {{ $a.GetGoAttributeIsZeroCondition }} {
    return false
}
{{- end}}
    return true
*/
    return {{- range $i, $a := $s.Attributes}} {{ if $i }} && {{- end}} {{ $a.GetGoAttributeIsZeroCondition }} {{- end}}
}
{{end }}