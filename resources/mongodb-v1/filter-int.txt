{{ define "filter-int" }}
//----- {{.Attr.GetDefinition.Name}} of type {{.Attr.GetDefinition.Typ}}
{{ $a := .Attr }}
{{ $f := $a.GetDefinition }}
// {{$f}} {{$f.Paths}}
{{- range $i, $p := $f.Paths}}
{{- if not (isIdentifierIndexed $p) }}
func (ca *Criteria) And{{ criteriaMethodSignature $p }}EqTo ({{ criteriaMethodVarParams $p true "after" }} p int) *Criteria {
	mName := fmt.Sprintf({{ formatIdentifier $p "_" "upperCase" "suppress" "indexIjk"}} {{ criteriaMethodVarParams $p false "before" }})
	c := func() bson.E { return bson.E { Key: mName, Value: p } }
	*ca = append(*ca, c)
    return ca
}

func (ca *Criteria) And{{ criteriaMethodSignature $p }}Gt ({{ criteriaMethodVarParams $p true "after" }} p int) *Criteria {
	mName := fmt.Sprintf({{ formatIdentifier $p "_" "upperCase" "suppress" "indexIjk"}} {{ criteriaMethodVarParams $p false "before" }})
	c := func() bson.E { return bson.E { Key: mName, Value: bson.D { {"$gt", p }} } }
	*ca = append(*ca, c)
    return ca
}
{{- end }}
{{- end }}
{{ end }}

