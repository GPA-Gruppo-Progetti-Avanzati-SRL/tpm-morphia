{{ define "update-object-id" }}
//----- {{.Attr.GetDefinition}} {{.Attr.GetDefinition.Paths}}
{{ $a := .Attr }}
{{ $f := $a.GetDefinition }}
{{- range $i, $p := $a.GetPaths "preferIndexed" }}
// Set{{ updateMethodSignature $p }} No Remarks
func (ud *UpdateDocument) Set{{ updateMethodSignature $p }} ({{ updateMethodVarParams $p true "after" }} p {{$a.GetGoAttributeType}}) *UpdateDocument {
	mName := fmt.Sprintf({{ formatIdentifier $p "_" "upperCase" "index" "indexIjk"}} {{ updateMethodVarParams $p false "before" }})
	ud.Set().Add(func() bson.E {
    		return bson.E{ Key: mName, Value: p}
    })
	return ud
}

// Unset{{ updateMethodSignature $p }} No Remarks
func (ud *UpdateDocument) Unset{{ updateMethodSignature $p }} ({{ updateMethodVarParams $p true "none" }}) *UpdateDocument {
	mName := fmt.Sprintf({{ formatIdentifier $p "_" "upperCase" "index" "indexIjk"}} {{ updateMethodVarParams $p false "before" }})
	ud.Unset().Add(func() bson.E {
    		return bson.E{ Key: mName, Value: ""}
    })
	return ud
}

// setOrUnset{{ updateMethodSignature $p }} No Remarks
func (ud *UpdateDocument) setOrUnset{{ updateMethodSignature $p }}({{ updateMethodVarParams $p true "after" }} p {{$a.GetGoAttributeType}}, um UnsetMode) {
	if !p.IsZero() {
		ud.Set{{ updateMethodSignature $p }}({{ updateMethodVarParams $p false "after" }} p)
	} else {
		switch um {
		case KeepCurrent:
		case UnsetData:
			ud.Unset{{ updateMethodSignature $p }}({{ updateMethodVarParams $p false "none" }})
		case SetData2Default:
			ud.Unset{{ updateMethodSignature $p }}({{ updateMethodVarParams $p false "none" }})
		}
	}
}
{{- end }}
{{- end }}